rename(name1 = 1, name2 = 2)
nicknames <- names_to_nicknames |>
filter(given_name %in% name_pair$name1 | nickname %in% name_pair$name2)
return(nicknames)
})
#temp <- data |>
#  filter(name1 %in% names_to_nicknames$given_name | name2 %in% names_to_nicknames$nickname)
return(temp)
}
test_data <- tibble(first_name = "Ted", first_name2 = "Theodore")
html_table() |>
pluck(1) |>
rename(given_name = 1, nickname = 2) |>
slice(-1) |>
filter(!str_detect(given_name, "^\\("),
given_name != "",
!is.na(given_name)) |>
#Some given names have multiple combined names. Separate.
separate_longer_delim(given_name, delim = ",") |>
#For ease of matching, move each nickname to it's own row.
separate_longer_delim(nickname, delim = ",") |>
mutate(across(everything(), str_trim)) |>
mutate(across(everything(), ~str_remove(., "\\(.*\\)"))) |>
filter(nickname != "" & nickname != " ") |>
distinct()
assign("names_to_nicknames", names_to_nicknames, envir = globalenv())
names_to_nicknames <- read_html("https://www.caagri.org/nicknames.html") |>
html_table() |>
pluck(1) |>
rename(given_name = 1, nickname = 2) |>
slice(-1) |>
filter(!str_detect(given_name, "^\\("),
given_name != "",
!is.na(given_name)) |>
#Some given names have multiple combined names. Separate.
separate_longer_delim(given_name, delim = ",") |>
#For ease of matching, move each nickname to it's own row.
separate_longer_delim(nickname, delim = ",") |>
mutate(across(everything(), str_trim)) |>
mutate(across(everything(), ~str_remove(., "\\(.*\\)"))) |>
filter(nickname != "" & nickname != " ") |>
distinct()
assign("names_to_nicknames", names_to_nicknames, envir = globalenv())
test_data <- tibble(first_name = "Ted", first_name2 = "Theodore")
name_pair <- test_data |>
rename(name1 = 1, name2 = 2)
nicknames <- names_to_nicknames |>
filter((given_name %in% name_pair$name1 & nickname %in% name_pair$name2) | (given_name %in% name_pair$name2 & nickname %in% name_pair$name1))
View(nicknames)
flag_nicknames <- function(data, name1, name2){
if (!exists('names_to_nicknames')){
names_to_nicknames <- read_html("https://www.caagri.org/nicknames.html") |>
html_table() |>
pluck(1) |>
rename(given_name = 1, nickname = 2) |>
slice(-1) |>
filter(!str_detect(given_name, "^\\("),
given_name != "",
!is.na(given_name)) |>
#Some given names have multiple combined names. Separate.
separate_longer_delim(given_name, delim = ",") |>
#For ease of matching, move each nickname to it's own row.
separate_longer_delim(nickname, delim = ",") |>
mutate(across(everything(), str_trim)) |>
mutate(across(everything(), ~str_remove(., "\\(.*\\)"))) |>
filter(nickname != "" & nickname != " ") |>
distinct()
assign("names_to_nicknames", names_to_nicknames, envir = globalenv())
message("names_to_nicknames dataframe written to globalenv")
}
temp <- map(nrow(data), function(x){
name_pair <- data |>
slice(x) |>
select(!!sym(name1), !!sym(name2)) |>
rename(name1 = 1, name2 = 2)
nickname <- names_to_nicknames |>
filter((given_name %in% name_pair$name1 & nickname %in% name_pair$name2) | (given_name %in% name_pair$name2 & nickname %in% name_pair$name1))
nickname_flag = if_else(nrow(nickname) != 0, 1, 0)
return(nickname_flag)
})
#temp <- data |>
#  filter(name1 %in% names_to_nicknames$given_name | name2 %in% names_to_nicknames$nickname)
return(temp)
}
test_data |> flag_nicknames("first_name", "first_name2")
test_data <- tibble(first_name = c("Ted", "Ben"), first_name2 = ("Theodore", "Brad"))
test_data |> flag_nicknames("first_name", "first_name2")
test_data <- tibble(first_name = c("Ted", "Ben"), first_name2 = ("Theodore", "Brad"))
test_data <- tibble(first_name = c("Ted", "Ben"), first_name2 = c("Theodore", "Brad"))
test_data |> flag_nicknames("first_name", "first_name2")
temp <- map(nrow(test_data), function(x){
name_pair <- data |>
slice(x) |>
select(!!sym(name1), !!sym(name2)) |>
rename(name1 = 1, name2 = 2)
nickname <- names_to_nicknames |>
filter((given_name %in% name_pair$name1 & nickname %in% name_pair$name2) | (given_name %in% name_pair$name2 & nickname %in% name_pair$name1))
nickname_flag = if_else(nrow(nickname) != 0, 1, 0)
return(nickname_flag)
})
temp <- map(nrow(test_data), function(x){
name_pair <- test_data |>
slice(x) |>
select(!!sym(name1), !!sym(name2)) |>
rename(name1 = 1, name2 = 2)
nickname <- names_to_nicknames |>
filter((given_name %in% name_pair$name1 & nickname %in% name_pair$name2) | (given_name %in% name_pair$name2 & nickname %in% name_pair$name1))
nickname_flag = if_else(nrow(nickname) != 0, 1, 0)
return(nickname_flag)
})
temp <- map(nrow(test_data), function(x){
name_pair <- test_data |>
slice(x) |>
select(first_name,first_name2) |>
rename(name1 = 1, name2 = 2)
nickname <- names_to_nicknames |>
filter((given_name %in% name_pair$name1 & nickname %in% name_pair$name2) | (given_name %in% name_pair$name2 & nickname %in% name_pair$name1))
nickname_flag = if_else(nrow(nickname) != 0, 1, 0)
return(nickname_flag)
})
View(temp)
nrow(test_data)
temp <- map(nrow(test_data), function(x){
name_pair <- test_data |>
slice(x) |>
select(first_name,first_name2) |>
rename(name1 = 1, name2 = 2)
nickname <- names_to_nicknames |>
filter((given_name %in% name_pair$name1 & nickname %in% name_pair$name2) | (given_name %in% name_pair$name2 & nickname %in% name_pair$name1))
nickname_flag = if_else(nrow(nickname) != 0, 1, 0)
print(nickname_flag)
return(nickname_flag)
})
temp <- map(1:nrow(test_data), function(x){
name_pair <- test_data |>
slice(x) |>
select(first_name,first_name2) |>
rename(name1 = 1, name2 = 2)
nickname <- names_to_nicknames |>
filter((given_name %in% name_pair$name1 & nickname %in% name_pair$name2) | (given_name %in% name_pair$name2 & nickname %in% name_pair$name1))
nickname_flag = if_else(nrow(nickname) != 0, 1, 0)
print(nickname_flag)
return(nickname_flag)
})
View(temp)
bind_rows(temp)
bind_cols(temp)
bind_rows(temp)
cbind(test_data, temp)
cbind(test_data, temp) |> view()
temp <- map(1:nrow(test_data), function(x){
name_pair <- test_data |>
slice(x) |>
select(first_name,first_name2) |>
rename(name1 = 1, name2 = 2)
nickname <- names_to_nicknames |>
filter((given_name %in% name_pair$name1 & nickname %in% name_pair$name2) | (given_name %in% name_pair$name2 & nickname %in% name_pair$name1))
nickname_flag = if_else(nrow(nickname) != 0, 1, 0)
print(nickname_flag)
return(nickname_flag)
})
cbind(test_data, temp)
rbind(test_data, temp)
temp <- map(1:nrow(test_data), function(x){
name_pair <- test_data |>
slice(x) |>
select(first_name,first_name2) |>
rename(name1 = 1, name2 = 2)
nickname <- names_to_nicknames |>
filter((given_name %in% name_pair$name1 & nickname %in% name_pair$name2) | (given_name %in% name_pair$name2 & nickname %in% name_pair$name1))
nickname_flag = if_else(nrow(nickname) != 0, 1, 0) |>
tibble(flag = _)
print(nickname_flag)
return(nickname_flag)
})
cbind(test_data, temp)
View(temp)
cbind(temp)
temp
bind_rows(temp)
cbind(test_data, bind_rows(temp))
flag_nicknames <- function(data, name1, name2){
if (!exists('names_to_nicknames')){
names_to_nicknames <- read_html("https://www.caagri.org/nicknames.html") |>
html_table() |>
pluck(1) |>
rename(given_name = 1, nickname = 2) |>
slice(-1) |>
filter(!str_detect(given_name, "^\\("),
given_name != "",
!is.na(given_name)) |>
#Some given names have multiple combined names. Separate.
separate_longer_delim(given_name, delim = ",") |>
#For ease of matching, move each nickname to it's own row.
separate_longer_delim(nickname, delim = ",") |>
mutate(across(everything(), str_trim)) |>
mutate(across(everything(), ~str_remove(., "\\(.*\\)"))) |>
filter(nickname != "" & nickname != " ") |>
distinct()
assign("names_to_nicknames", names_to_nicknames, envir = globalenv())
message("names_to_nicknames dataframe written to globalenv")
}
temp <- map(nrow(data), function(x){
name_pair <- data |>
slice(x) |>
select(!!sym(name1), !!sym(name2)) |>
rename(name1 = 1, name2 = 2)
nickname <- names_to_nicknames |>
filter((given_name %in% name_pair$name1 & nickname %in% name_pair$name2) | (given_name %in% name_pair$name2 & nickname %in% name_pair$name1))
nickname_flag = if_else(nrow(nickname) != 0, 1, 0)
return(nickname_flag)
})
return(cbind(test_data, bind_rows(temp)))
}
test_data <- tibble(first_name = c("Ted", "Ben"), first_name2 = c("Theodore", "Brad"))
test_data |> flag_nicknames("first_name", "first_name2")
test_data <- tibble(first_name = c("Ted", "Ben"), first_name2 = c("Theodore", "Brad"))
test_data <- tibble(first_name = c("Ted", "Ben"), first_name2 = c("Theodore", "Brad"))
View(test_data)
test_data |> flag_nicknames("first_name", "first_name2")
flag_nicknames <- function(data, name1, name2){
if (!exists('names_to_nicknames')){
names_to_nicknames <- read_html("https://www.caagri.org/nicknames.html") |>
html_table() |>
pluck(1) |>
rename(given_name = 1, nickname = 2) |>
slice(-1) |>
filter(!str_detect(given_name, "^\\("),
given_name != "",
!is.na(given_name)) |>
#Some given names have multiple combined names. Separate.
separate_longer_delim(given_name, delim = ",") |>
#For ease of matching, move each nickname to it's own row.
separate_longer_delim(nickname, delim = ",") |>
mutate(across(everything(), str_trim)) |>
mutate(across(everything(), ~str_remove(., "\\(.*\\)"))) |>
filter(nickname != "" & nickname != " ") |>
distinct()
assign("names_to_nicknames", names_to_nicknames, envir = globalenv())
message("names_to_nicknames dataframe written to globalenv")
}
temp <- map(nrow(data), function(x){
name_pair <- data |>
slice(x) |>
select(!!sym(name1), !!sym(name2)) |>
rename(name1 = 1, name2 = 2)
nickname <- names_to_nicknames |>
filter((given_name %in% name_pair$name1 & nickname %in% name_pair$name2) | (given_name %in% name_pair$name2 & nickname %in% name_pair$name1))
nickname_flag = if_else(nrow(nickname) != 0, 1, 0)
return(nickname_flag)
})
return(cbind(data, bind_rows(temp)))
}
test_data |> flag_nicknames("first_name", "first_name2")
flag_nicknames <- function(data, name1, name2){
if (!exists('names_to_nicknames')){
names_to_nicknames <- read_html("https://www.caagri.org/nicknames.html") |>
html_table() |>
pluck(1) |>
rename(given_name = 1, nickname = 2) |>
slice(-1) |>
filter(!str_detect(given_name, "^\\("),
given_name != "",
!is.na(given_name)) |>
#Some given names have multiple combined names. Separate.
separate_longer_delim(given_name, delim = ",") |>
#For ease of matching, move each nickname to it's own row.
separate_longer_delim(nickname, delim = ",") |>
mutate(across(everything(), str_trim)) |>
mutate(across(everything(), ~str_remove(., "\\(.*\\)"))) |>
filter(nickname != "" & nickname != " ") |>
distinct()
assign("names_to_nicknames", names_to_nicknames, envir = globalenv())
message("names_to_nicknames dataframe written to globalenv")
}
temp <- map(nrow(data), function(x){
name_pair <- data |>
slice(x) |>
select(!!sym(name1), !!sym(name2)) |>
rename(name1 = 1, name2 = 2)
nickname <- names_to_nicknames |>
filter((given_name %in% name_pair$name1 & nickname %in% name_pair$name2) | (given_name %in% name_pair$name2 & nickname %in% name_pair$name1))
nickname_flag = if_else(nrow(nickname) != 0, 1, 0) |>
tibble(flag = _)
return(nickname_flag)
})
return(cbind(data, bind_rows(temp)))
}
test_data |> flag_nicknames("first_name", "first_name2")
flag_nicknames <- function(data, name1, name2){
if (!exists('names_to_nicknames')){
names_to_nicknames <- read_html("https://www.caagri.org/nicknames.html") |>
html_table() |>
pluck(1) |>
rename(given_name = 1, nickname = 2) |>
slice(-1) |>
filter(!str_detect(given_name, "^\\("),
given_name != "",
!is.na(given_name)) |>
#Some given names have multiple combined names. Separate.
separate_longer_delim(given_name, delim = ",") |>
#For ease of matching, move each nickname to it's own row.
separate_longer_delim(nickname, delim = ",") |>
mutate(across(everything(), str_trim)) |>
mutate(across(everything(), ~str_remove(., "\\(.*\\)"))) |>
filter(nickname != "" & nickname != " ") |>
distinct()
assign("names_to_nicknames", names_to_nicknames, envir = globalenv())
message("names_to_nicknames dataframe written to globalenv")
}
temp <- map(nrow(data), function(x){
name_pair <- data |>
slice(x) |>
select(!!sym(name1), !!sym(name2)) |>
rename(name1 = 1, name2 = 2)
nickname <- names_to_nicknames |>
filter((given_name %in% name_pair$name1 & nickname %in% name_pair$name2) | (given_name %in% name_pair$name2 & nickname %in% name_pair$name1))
nickname_flag = if_else(nrow(nickname) != 0, 1, 0) |>
tibble(flag = _)
print(nickname_flag)
return(nickname_flag)
})
return(cbind(data, bind_rows(temp)))
}
test_data |> flag_nicknames("first_name", "first_name2")
flag_nicknames <- function(data, name1, name2){
if (!exists('names_to_nicknames')){
names_to_nicknames <- read_html("https://www.caagri.org/nicknames.html") |>
html_table() |>
pluck(1) |>
rename(given_name = 1, nickname = 2) |>
slice(-1) |>
filter(!str_detect(given_name, "^\\("),
given_name != "",
!is.na(given_name)) |>
#Some given names have multiple combined names. Separate.
separate_longer_delim(given_name, delim = ",") |>
#For ease of matching, move each nickname to it's own row.
separate_longer_delim(nickname, delim = ",") |>
mutate(across(everything(), str_trim)) |>
mutate(across(everything(), ~str_remove(., "\\(.*\\)"))) |>
filter(nickname != "" & nickname != " ") |>
distinct()
assign("names_to_nicknames", names_to_nicknames, envir = globalenv())
message("names_to_nicknames dataframe written to globalenv")
}
temp <- map(1:nrow(data), function(x){
name_pair <- data |>
slice(x) |>
select(!!sym(name1), !!sym(name2)) |>
rename(name1 = 1, name2 = 2)
nickname <- names_to_nicknames |>
filter((given_name %in% name_pair$name1 & nickname %in% name_pair$name2) | (given_name %in% name_pair$name2 & nickname %in% name_pair$name1))
nickname_flag = if_else(nrow(nickname) != 0, 1, 0) |>
tibble(flag = _)
print(nickname_flag)
return(nickname_flag)
})
return(cbind(data, bind_rows(temp)))
}
test_data |> flag_nicknames("first_name", "first_name2")
flag_nicknames <- function(data, name1 = "first_name_1", name2 = "first_name_2"){
if (!exists('names_to_nicknames')){
names_to_nicknames <- read_html("https://www.caagri.org/nicknames.html") |>
html_table() |>
pluck(1) |>
rename(given_name = 1, nickname = 2) |>
slice(-1) |>
filter(!str_detect(given_name, "^\\("),
given_name != "",
!is.na(given_name)) |>
#Some given names have multiple combined names. Separate.
separate_longer_delim(given_name, delim = ",") |>
#For ease of matching, move each nickname to it's own row.
separate_longer_delim(nickname, delim = ",") |>
mutate(across(everything(), str_trim)) |>
mutate(across(everything(), ~str_remove(., "\\(.*\\)"))) |>
filter(nickname != "" & nickname != " ") |>
distinct()
assign("names_to_nicknames", names_to_nicknames, envir = globalenv())
message("names_to_nicknames dataframe written to globalenv")
}
temp <- map(1:nrow(data), function(x){
name_pair <- data |>
slice(x) |>
select(!!sym(name1), !!sym(name2)) |>
rename(name1 = 1, name2 = 2)
nickname <- names_to_nicknames |>
filter((given_name %in% name_pair$name1 & nickname %in% name_pair$name2) | (given_name %in% name_pair$name2 & nickname %in% name_pair$name1))
nickname_flag = if_else(nrow(nickname) != 0, 1, 0) |>
tibble(flag = _)
return(nickname_flag)
})
return(cbind(data, bind_rows(temp)))
}
test_data <- tibble(first_name_1 = c("Ted", "Ben"), first_name_2 = c("Theodore", "Brad"))
test_data |> flag_nicknames()
.packages()
?.packages
.packages(all.available = TRUE)
base::loadedNamespaces()
"rvest" %in% base::loadedNamespaces()
?html_table
View(names_to_nicknames)
library(devtools)
library(roxygen2)
#setwd('./PHInfo')
setwd('C:/Users/NAIM001/PHinfo')
document()
sum(temp)
temp
temp$flag
bind_rows(temp)
sum(bind_rows(temp))
flag_nicknames <- function(data, name1 = "first_name_1", name2 = "first_name_2"){
if (!exists('names_to_nicknames')){
names_to_nicknames <- rvest::read_html("https://www.caagri.org/nicknames.html") |>
rvest::html_table() |>
pluck(1) |>
rename(given_name = 1, nickname = 2) |>
slice(-1) |>
filter(!str_detect(given_name, "^\\("),
given_name != "",
!is.na(given_name)) |>
#Some given names have multiple combined names. Separate.
separate_longer_delim(given_name, delim = ",") |>
#For ease of matching, move each nickname to it's own row.
separate_longer_delim(nickname, delim = ",") |>
mutate(across(everything(), str_to_upper),
across(everything(), str_trim),
across(everything(), ~str_remove_all(., " ")),
across(everything(), ~str_remove(., "\\(.*\\)"))) |>
filter(nickname != "" & nickname != " ") |>
distinct()
assign("names_to_nicknames", names_to_nicknames, envir = globalenv())
message("names_to_nicknames dataframe written to globalenv")
}
temp <- map(1:nrow(data), function(x){
name_pair <- data |>
slice(x) |>
select(!!sym(name1), !!sym(name2)) |>
rename(name1 = 1, name2 = 2)
nickname <- names_to_nicknames |>
filter((given_name %in% name_pair$name1 & nickname %in% name_pair$name2) | (given_name %in% name_pair$name2 & nickname %in% name_pair$name1))
nickname_flag = if_else(nrow(nickname) != 0, 1, 0) |>
tibble(nickname_flag = _)
return(nickname_flag)
})
message(paste0(sum(bind_rows(temp)), " given name - nickname matches."))
return(cbind(data, bind_rows(temp)))
}
test_data |> flag_nicknames()
flag_nicknames <- function(data, name1 = "first_name_1", name2 = "first_name_2"){
}
flag_nicknames <- function(data, name1 = "first_name_1", name2 = "first_name_2"){
if (!exists('names_to_nicknames')){
names_to_nicknames <- rvest::read_html("https://www.caagri.org/nicknames.html") |>
rvest::html_table() |>
pluck(1) |>
rename(given_name = 1, nickname = 2) |>
slice(-1) |>
filter(!str_detect(given_name, "^\\("),
given_name != "",
!is.na(given_name)) |>
#Some given names have multiple combined names. Separate.
separate_longer_delim(given_name, delim = ",") |>
#For ease of matching, move each nickname to it's own row.
separate_longer_delim(nickname, delim = ",") |>
mutate(across(everything(), str_to_upper),
across(everything(), str_trim),
across(everything(), ~str_remove_all(., " ")),
across(everything(), ~str_remove(., "\\(.*\\)"))) |>
filter(nickname != "" & nickname != " ") |>
distinct()
assign("names_to_nicknames", names_to_nicknames, envir = globalenv())
message("names_to_nicknames dataframe written to globalenv")
}
temp <- map(1:nrow(data), function(x){
name_pair <- data |>
slice(x) |>
select(!!sym(name1), !!sym(name2)) |>
rename(name1 = 1, name2 = 2)
nickname <- names_to_nicknames |>
filter((given_name %in% name_pair$name1 & nickname %in% name_pair$name2) | (given_name %in% name_pair$name2 & nickname %in% name_pair$name1))
nickname_flag = if_else(nrow(nickname) != 0, 1, 0) |>
tibble(nickname_flag = _)
return(nickname_flag)
})
nns <- sum(bind_rows(temp))
message(paste0(nns, " given name - nickname match", if_else(nns == 1, " IDed.", "es IDed.")))
return(cbind(data, bind_rows(temp)))
}
test_data |> flag_nicknames()
library(devtools)
library(roxygen2)
#setwd('./PHInfo')
setwd('C:/Users/NAIM001/PHinfo')
document()
get_wd()
getwd
getwd()
library(tidyverse)
library(sf)
mpls_nbhds <- read_sf("C:/Users/NAIM001/Downloads/Minneapolis_Neighborhoods/Minneapolis_Neighborhoods.shp")
View(mpls_nbhds)
mpls_nbhds <- read_sf("C:/Users/NAIM001/Downloads/Minneapolis_Neighborhoods/Minneapolis_Neighborhoods.shp") |>
janitor::clean_names()
usethis::use_data(mpls_nbhds)
#Document data
use_r("data")
#Document data
usethis::use_r("data")
